/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views_pkg;

import static java.awt.image.ImageObserver.ERROR;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karen
 */
public class VistaRuta extends javax.swing.JFrame {

    VistaInicioSesion vis;
    private Connection connection;
    private DefaultTableModel model;
    int id_ciclista;
    String fecha_inicio;
    String fecha_fin;
    String hora_inicio;
    String hora_fin;
    String min_inicio;
    String min_fin;
    float duracion;
    String mail;
    String password;

    /**
     * Creates new form VistaRuta
     */
    public VistaRuta(VistaInicioSesion vis, String mail, String password, int id) {
        initComponents();
        setLocationRelativeTo(this);
        this.connection = vis.getConnection();
        this.fecha_inicio = "";
        this.fecha_fin = "";
        this.hora_inicio = "";
        this.hora_fin = "";
        this.min_inicio = "";
        this.min_fin = "";
        this.duracion = 0;
        this.mail = mail;
        this.password = password;
        this.id_ciclista = id;
        this.show_rutas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    void obtenerFechaActual() {
        try { // CURDATE() as fecha YEAR(NOW()) as year
            String sql = "SELECT CURRENT_TIMESTAMP;";

            PreparedStatement prep_statement;
            prep_statement = connection.prepareStatement(sql);

            //System.out.println(rs.getString("fecha"));
            //rs.next();
            Date miFechaYHora = null;
            ResultSet rs = prep_statement.executeQuery();
            if (rs.next()) {
                miFechaYHora = new Date(rs.getTimestamp(1).getTime());
                System.out.println("obtener fecha actual" + rs.getDate(1));
            }
            System.out.println(miFechaYHora);

        } catch (SQLException ex) {
            System.out.println("ERROR consulta: " + ex.getMessage());

        }
    }

    Boolean validarFecha() {
        String letraD = "";
        int nD = -1;
        Calendar today = Calendar.getInstance();
        Calendar last_date_week = Calendar.getInstance();

        int day = today.get(Calendar.DATE);
        int month = today.get(Calendar.MONTH) + 1;
        int year = today.get(Calendar.YEAR);
        hora_inicio = Integer.toString(today.get(Calendar.HOUR_OF_DAY));
        min_inicio = Integer.toString(today.get(Calendar.MINUTE));
        //System.out.println("Fecha de hoy: "+c.getTime());
        fecha_inicio = day + "-" + month + "-" + year;
        System.out.println(fecha_inicio);

        today.set(year, month - 1, day);
        nD = today.get(Calendar.DAY_OF_WEEK);
        System.out.println(nD);

        switch (nD) {
            case 1:
                letraD = "D";
                last_date_week.add(Calendar.DATE, 0);
                break;
            case 2:
                letraD = "L";
                last_date_week.add(Calendar.DATE, 6);
                break;
            case 3:
                letraD = "M";
                last_date_week.add(Calendar.DATE, 5);
                break;
            case 4:
                letraD = "W";
                last_date_week.add(Calendar.DATE, 4);
                break;
            case 5:
                letraD = "J";
                last_date_week.add(Calendar.DATE, 3);
                break;
            case 6:
                letraD = "V";
                last_date_week.add(Calendar.DATE, 2);
                break;
            case 7:
                letraD = "S";
                last_date_week.add(Calendar.DATE, 1);
                break;
        }
        last_date_week.set(year, month - 1, 5);
        System.out.println("last " + last_date_week.getTime());//"last " + last_date_week.getTime()
        if (today.after(last_date_week)) {
            System.out.println("mayor");
            return false;
        } else {
            System.out.println("menor/igual");
            return true;
        }
    }

    float calcular_duracion(String hora, String minutos, String hora2, String minutos2) {
        System.out.println("totalmin"+hora+minutos+hora2+minutos2);
        int hour = Integer.parseInt(hora) * 60;
        int minute = Integer.parseInt(minutos);
        int total_minutos = hour + minute;
        System.out.println("totalmin"+total_minutos);
        
        int hour2 = Integer.parseInt(hora2) * 60;
        int minute2 = Integer.parseInt(minutos2);
        int total_minutos2 = hour2 + minute2;
        System.out.println("totalmin2"+total_minutos2);
        int resultado_minutos = total_minutos2 - total_minutos;
        System.out.println("resultmin"+resultado_minutos);
        float resultado_Horas = (float)resultado_minutos / (float)60;
        System.out.println("resulthor"+resultado_Horas);
        return resultado_Horas;
    }
    
    void obtener_fechaFinal(){
        Calendar final_date = Calendar.getInstance();
  
        int day = final_date.get(Calendar.DATE);
        int month = final_date.get(Calendar.MONTH) + 1;
        int year = final_date.get(Calendar.YEAR);
        hora_fin = Integer.toString(final_date.get(Calendar.HOUR_OF_DAY));
        min_fin = Integer.toString(final_date.get(Calendar.MINUTE));
        
        fecha_fin = day + "-" + month + "-" + year;
    }
     public void show_rutas(){
        String sql = "SELECT * FROM tb_ruta WHERE id_ciclista ="+id_ciclista+";";
        
        try{
            
            PreparedStatement prep_statement;
            prep_statement = connection.prepareStatement(sql);
            prep_statement.setQueryTimeout(10);
                        
            ResultSet rs = prep_statement.executeQuery();
            
            Object[]rutas = new Object[9];
            
            model = (DefaultTableModel)tb_rutas.getModel();
            
            while(rs.next()){
                rutas[0] = rs.getInt("id");
                rutas[1] = rs.getString("fecha_inicio");
                rutas[2] = rs.getString("lugar_partida");
                rutas[3] = rs.getString("hora_inicio");
                rutas[4] = rs.getString("fecha_fin");
                rutas[5] = rs.getString("lugar_llegada");
                rutas[6] = rs.getString("hora_fin");
                rutas[7] = rs.getFloat("kilometros");
                rutas[8] = rs.getFloat("duracion");
                model.addRow(rutas);
            }
            
           tb_rutas.setModel(model);
            
        }catch(SQLException e){
            System.out.println(e);
        }
    }
    void add_ruta(){
        String fechaI = fecha_inicio;
        String lugarI = txt_lugarInicial.getText();
        String horaI = hora_inicio +" : " + min_inicio; 
        
        String fechaF = fecha_fin;
        String lugarF = txt_lugarFinal.getText();
        String horaF = hora_fin +" : " + min_fin; 
        
        float km = Float.parseFloat(txt_km.getText());
        float tiempo = duracion;
        String descript = ta_description.getText();
        int id_c = id_ciclista;
        
        String sql= "INSERT INTO tb_ruta (fecha_inicio, lugar_partida, hora_inicio,"
                + "fecha_fin, lugar_llegada, hora_fin, kilometros, duracion, descript, id_ciclista) VALUES (?,?,?,?,?,?,?,?,?,?);";
        
        try{

            PreparedStatement prep_statement;
            prep_statement = connection.prepareStatement(sql);
            prep_statement.setQueryTimeout(10);
            
            prep_statement.setString(1, fechaI);
            prep_statement.setString(2, lugarI);
            prep_statement.setString(3, horaI);
            prep_statement.setString(4, fechaF);
            prep_statement.setString(5, lugarF);
            prep_statement.setString(6, horaF);
            prep_statement.setFloat(7, km);
            prep_statement.setFloat(8, tiempo);
            prep_statement.setString(9, descript);
            prep_statement.setInt(10, id_c);
            
            prep_statement.executeUpdate();
            
        }catch(SQLException e){
            System.out.println(e);
        }
        
        System.out.println("AÃ‘ADIDO");
        JOptionPane.showMessageDialog(this, "Registro exitoso");
        this.show_rutas();
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_title1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_rutas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txt_lugarInicial = new javax.swing.JTextField();
        txt_km = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btn_start = new javax.swing.JButton();
        btn_Stop = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_lugarFinal = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_description = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_title1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lbl_title1.setText("Registrar Ruta");

        tb_rutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "fecha_inicio", "lugar_partida", "hora_inicio", "fecha_fin", "lugar_llegada", "hora_fin", "kilometros", "duracion"
            }
        ));
        jScrollPane1.setViewportView(tb_rutas);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txt_lugarInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_lugarInicialActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel1.setText("Lugar de partida");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Lugar de llegada");

        btn_start.setBackground(new java.awt.Color(0, 204, 51));
        btn_start.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_start.setForeground(new java.awt.Color(255, 255, 255));
        btn_start.setText("INICIAR");
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startActionPerformed(evt);
            }
        });

        btn_Stop.setBackground(new java.awt.Color(51, 51, 51));
        btn_Stop.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_Stop.setForeground(new java.awt.Color(255, 255, 255));
        btn_Stop.setText("DETENER");
        btn_Stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_StopActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Kilometros");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ta_description.setColumns(20);
        ta_description.setRows(5);
        jScrollPane2.setViewportView(ta_description);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Novedades");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txt_km, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_lugarFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_lugarInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                                .addComponent(btn_start, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_lugarInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_lugarFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_km, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_start))
                .addGap(4, 4, 4)
                .addComponent(btn_Stop)
                .addContainerGap())
        );

        jButton3.setBackground(new java.awt.Color(0, 153, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("EDITAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(204, 51, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("ELIMINAR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbl_title1)
                        .addGap(349, 349, 349))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbl_title1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_lugarInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_lugarInicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_lugarInicialActionPerformed

    private void btn_StopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_StopActionPerformed
        obtener_fechaFinal();
        duracion = calcular_duracion(hora_inicio, min_inicio, hora_fin, min_fin);
        System.out.println("dur"+duracion);
        for(int i=0; i<tb_rutas.getRowCount(); i++){
            model.removeRow(i);
            i -= 1;
        }
        
        this.add_ruta();
        
        txt_lugarInicial.setText("");
        txt_lugarFinal.setText("");
        txt_km.setText("");
        ta_description.setText("");
       
    }//GEN-LAST:event_btn_StopActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btn_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startActionPerformed
        // TODO add your handling code here:
        obtenerFechaActual();
        if (!validarFecha()) {
            JOptionPane.showMessageDialog(this, "La fecha no es valida");
        }
    }//GEN-LAST:event_btn_startActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Stop;
    private javax.swing.JButton btn_start;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_title1;
    private javax.swing.JTextArea ta_description;
    private javax.swing.JTable tb_rutas;
    private javax.swing.JTextField txt_km;
    private javax.swing.JTextField txt_lugarFinal;
    private javax.swing.JTextField txt_lugarInicial;
    // End of variables declaration//GEN-END:variables
}
